services:
#Servicios EKL para los logs.
#La ventaja es que despliegan y analizan fallas, salidas de los comandos, pesos de archivos, etc.
  elasticsearch:
    image: elasticsearch:8.6.0
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 5s
    profiles:
      - donotstart

  kibana:
    image: kibana:8.6.0
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - donotstart

  logstash:
    image: logstash:8.6.0
    ports:
      - "5000:5000/udp"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    links:
      - elasticsearch
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - donotstart

#Esta es la versión básica de la controladora
#Hecha en PHP
  apache:
    ports:
      - "80:80"
    build:
      context: .
      dockerfile: apache.Dockerfile
    environment:
      - ABKP_DB_HOST=kibana-mariadb-1
      - ABKP_DB_USER=auto-backup
      - ABKP_DB_PASS=auto-backup
      - ABKP_DB_NAME=auto-backup
      - ABKP_PY_HOST=10.22.165.29
      - ABKP_PY_PORT=5000
    volumes:
      - ./controladora/:/var/www/html
    profiles:
      - donotstart

#Para usar la base de datos es necesario importarla desde el archivo autobackup-db.sql
  mariadb:
    image: mariadb:11.2.4
    environment:
      MARIADB_ROOT_PASSWORD: auto-backup
      MARIADB_DATABASE: auto-backup
      MARIADB_USER: auto-backup
      MARIADB_PASSWORD: auto-backup
      TZ: America/Mexico_City
    expose:
      - "3306"
    ports:
      - "3306:3306"

#Flask, funciona de igual forma que una API normal como lo es Express
  flask:
    build:
      context: .
      dockerfile: flask.Dockerfile
    environment:
      - FLASK_APP=main
      - FLASK_ENV=development
      #Cors options
      #- FLASK_CORS_OPTIONS='*'
      - FLASK_CORS_OPTIONS=*,http://localhost:8080,https://localhost:8080,http://auto-backup-vuejs-1:8081,http://10.22.165.29:8081,http://10.22.165.29:5000
      - ABKP_DB_HOST=auto-backup-mariadb-1
      - ABKP_DB_USER=auto-backup
      - ABKP_DB_PASS=auto-backup
      - ABKP_DB_NAME=auto-backup
      - TZ=America/Mexico_City
    command: flask run --host=0.0.0.0
    expose:
      - "5000"
    ports: #De momento se debe mapear el puerto. Posible cors issue
      - "5000:5000"

#API que conecta la base de datos con el frontend
#Usa Sequelize
  express:
    build:
      context: .
      dockerfile: express.Dockerfile
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      #Cors options
      - EXPRESS_CORS_OPTIONS=*,http://localhost:8080,https://localhost:8080,http://auto-backup-vuejs-1:8081,http://10.22.165.29:8081
      - ABKP_DB_HOST=auto-backup-mariadb-1
      - ABKP_DB_USER=auto-backup
      - ABKP_DB_PASS=auto-backup
      - ABKP_DB_NAME=auto-backup
      - TZ=America/Mexico_City
    volumes:
      - ./backend-controladora-js/:/home/node/app
    expose:
      - "8080"
    ports: #De momento se deben mapear los puertos
      - "8080:8080"
    command: "node server.js"

#Frontend para desarrollo
  vuejs:
    build:
      context: .
      dockerfile: vuejs.Dockerfile
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
      - ALLOWED_HOSTS=auto-backup-vuejs-1
      - ABKP_AXIOS_BASEURL="http://10.22.165.29:8080/api"
      - ABKP_FLASK_BASEURL="http://10.22.165.29:5000"
      - TZ=America/Mexico_City
    volumes:
      - ./frontend-controladora-js/:/home/node/app
    ports: #Mapear este puerto para ver la consola
      - "8081:8081"
    command: "npm run serve"

#Frontend para producción
  nginx:
    ports:
      - "8081:80"
    build:
      context: .
      dockerfile: nginx.Dockerfile
    environment:
      - ALLOWED_HOSTS=auto-backup-vuejs-1
      - ABKP_AXIOS_BASEURL="http://auto-backup-express-1:8080/api"
      - TZ=America/Mexico_City
    profiles:
      - donotstart
